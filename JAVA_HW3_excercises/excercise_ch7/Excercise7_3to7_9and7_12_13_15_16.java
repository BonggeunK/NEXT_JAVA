// 연습문제 7-3부터 7-9까지, 7-12, 7-13, 7-15, 7-16
package excercise_ch7;

public class Excercise7_3to7_9and7_12_13_15_16 {

	// 7-3
	// 오버라이딩(overriding): 부모 클래스에서 상속받은 메소드의 시그니처는 동일하되, 기능을 재정의하는 것
	// 필요성: 공통된 기능은 부모 클래스의 메소드에서 구현하고, 나머지 세부 기능은 상속받은 자식 클래스에서 각각에 맞게 구현하는 것이 코드 재사용성 및 유지 보수에 좋음.
	
	// 7-4
	// d, e
	
	// 7-5
	// Product 클래스에서 사용자가 생성자를 별도로 정의했으므로, default 생성자 가 제공되지 않는다.
	// 그런데, Product 를 상속받는 Tv 클래스의 생성자는 기본 생성자를 호출하고 있으므로,
	// Tv 인스턴스가 생성될 때, Product 클래스의 기본 생성자를 필요로 한다.
	// 따라서, Product 클래스 내에 기본 생성자
	// Product(){}
	// 를 별도로 지정해줘야 한다.
	
	// 7-6
	// 부모 클래스에 정의된 속성을 "초기화"하기 위해서, 부모 클래스의 생성자를 호출한다.
	
	// 7-7
	// new Child();를 호출할 때에,
	// Child 클래스에 있는 Child(1000)이 호출되고, 
	// 부모 클래스의 생성자인 Parent()가 호출되는데,
	// Parent() 생성자에서 다시, Parent 클래스에 있는 Parent(200)이 호출된다.
	// 그래서, 부모 클래스의 속성 x = 200으로 초기화된다.
	// 이때, child 인스턴스에는 getX()메소드가 정의되어 있지 않으므로,
	// 부모 클래스의 getX() 메소드가 호출되며, Parent 인스턴스의 속성 값인 x=200 이 리턴된다.
	
	// 7-8
	// a
	
	// 7-9
	// c (오버라이딩을 금지하는 것일 뿐, 오버로딩은 가능함)
	
	// 7-12
	// c
	
	// 7-13
	// Math 클래스는 메소드들이 static으로 정의되고 인스턴스 변수가 없어서,
	// 외부에서 불필요하게 인스턴스를 생성할 필요가 없다.
	
	// 7-15
	// e
	
	// 7-16
	// e
		
}
